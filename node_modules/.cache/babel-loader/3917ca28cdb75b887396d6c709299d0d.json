{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // Amplify\n\nimport Amplify from \"aws-amplify\"; // Pages\n\nimport Home from \"./pages/Home\";\nimport Error from \"./pages/Error\";\nimport Books from \"./pages/Books\";\nimport Cart from \"./pages/Cart\";\nimport Checkout from \"./pages/Checkout\";\nimport BookDetails from \"./pages/BookDetails\";\nimport Admin from './pages/Admin';\nimport Dashboard from './pages/Dashboard';\nimport UltimateDashboard from './UltimateDashboard'; // Components\n\nimport Header from \"./components/Header\"; // Comunicate BOT\n\nimport Communicate from \"./Communicate/Communicate\"; // Amplify Configurations\n\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Communicate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UltimateDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Books, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/books/:id\",\n    children: /*#__PURE__*/React.createElement(BookDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Admin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App; // import React from 'react';\n// // import {\n// //   getCachedResults,\n// //   fetchResults,\n// //   removeAllMarkers,\n// //   addMarkers\n// // } from './map';\n// const H = window.H;\n// const platform = new H.service.Platform({\n//   apikey: 'LEKWHSBws2AdMq7AOzft6cGDIfT9c3p8VIuQFvwLdp4'\n// });\n// const defaultLayers = platform.createDefaultLayers();\n// const map = new H.Map(\n//     document.getElementById('map'),\n//     defaultLayers.vector.normal.map,\n//     {\n//       center: { lat: 30.5684073, lng: 114.0201923 },\n//       zoom: 3,\n//       pixelRatio: window.devicePixelRatio || 1\n//     }\n// );\n// new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n// const ui = H.ui.UI.createDefault(map, defaultLayers);\n// const group = new H.map.Group();\n// map.addObject(group);\n// group.addEventListener('tap', onMarkerTapped, false);\n// function onMarkerTapped(evt) {\n//   if (activeBubble) {\n//     activeBubble.close();\n//   }\n//   const bubble = new H.ui.InfoBubble(evt.target.getGeometry(), {\n//     content: evt.target.getData()\n//   });\n//   ui.addBubble(bubble);\n//   activeBubble = bubble;\n// }\n// export const addMarkers = makeAddMarkers(group);\n// export const removeAllMarkers = makeRemoveAllMarkers(group);\n// let activeBubble;\n// window.addEventListener('resize', () => map.getViewPort().resize());\n// export function getCachedResults() {\n//   return new Promise(resolve => {\n//     const data = require('./data.json');\n//     resolve(serializeResults(data));\n//   });\n// }\n// export function fetchResults() {\n//   return fetch('https://lab.isaaclin.cn/nCoV/api/area?latest=1')\n//       .then(res => res.json())\n//       .then(serializeResults);\n// }\n// function serializeResults(res) {\n//   return res.results.map(\n//       ({\n//          countryEnglishName,\n//          provinceName,\n//          provinceEnglishName,\n//          confirmedCount,\n//          deadCount,\n//          curedCount,\n//          cities\n//        }) => ({\n//         province: provinceEnglishName || provinceName,\n//         country: countryEnglishName,\n//         cities,\n//         confirmedCount,\n//         deadCount,\n//         curedCount\n//       })\n//   );\n// }\n// function geoCode(geocodingParameters, onSuccess) {\n//   const geocoder = platform.getGeocodingService();\n//   return geocoder.geocode(geocodingParameters, onSuccess);\n// }\n// function searchLocation({ province, country }, onSuccess) {\n//   const provinceIsCountry = province === country;\n//   const geocodingParameters = provinceIsCountry\n//       ? { country }\n//       : { searchText: `${province}, ${country}` };\n//   geoCode({ ...geocodingParameters, jsonattributes: 1 }, res => {\n//     const pos = res.response.view.flatMap(v =>\n//         v.result.flatMap(r => r.location.displayPosition)\n//     );\n//     onSuccess(pos);\n//   });\n// }\n// function addMarkerToGroup(\n//     group,\n//     { lat, lng, province, country, confirmedCount, deadCount, curedCount }\n// ) {\n//   const iconEl = createMarker(confirmedCount);\n//   const domIcon = new H.map.DomIcon(iconEl);\n//   const marker = new H.map.DomMarker({ lat, lng }, { icon: domIcon });\n//   group.addObject(marker);\n//   marker.setData(`\n//     <div class='info'>\n//       <div class='info__header'>\n//         <strong class='info__province'>${province}</strong>\n//         ${province === country ? '' : `<div>${country}</div>`}\n//       </div>\n//       <div class='info__content'>\n//         <div class='col'>\n//           <div class='info__label'>Ca ghi nhận</div>\n//           <div><strong class='info__stat color-warn'>${formatNumber(\n//       confirmedCount\n//   )}</strong></div>\n//         </div>\n//         <div class='col'>\n//           <div class='info__label'>Tử vong</div>\n//           <div><strong class='info__stat color-died'>${formatNumber(\n//       deadCount\n//   )}</strong></div>\n//         </div>\n//         <div class='col'>\n//           <div class='info__label'>Hồi phục</div>\n//           <div><strong class='info__stat color-cured'>${formatNumber(\n//       curedCount\n//   )}</strong></div>\n//         </div>\n//       </div>\n//     </div>\n//   `);\n// }\n// function createMarker(radius) {\n//   const iconEl = document.createElement('div');\n//   iconEl.className = 'circle';\n//   iconEl.style.width = radius + 'px';\n//   iconEl.style.height = radius + 'px';\n//   iconEl.innerHTML = radius;\n//   return iconEl;\n// }\n// function formatNumber(x) {\n//   return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n// }\n// function makeAddMarkers(group) {\n//   return res =>\n//       res.forEach(\n//           ({\n//              province,\n//              country,\n//              confirmedCount,\n//              deadCount,\n//              curedCount,\n//              cities\n//            }) => {\n//             searchLocation({ province, country }, pos => {\n//               pos.forEach(({ latitude, longitude }) => {\n//                 addMarkerToGroup(group, {\n//                   lat: latitude,\n//                   lng: longitude,\n//                   confirmedCount,\n//                   province,\n//                   country,\n//                   deadCount,\n//                   curedCount\n//                 });\n//               });\n//             });\n//             if (cities && cities.length > 0) {\n//               cities.forEach(\n//                   ({ cityEnglishName, confirmedCount, deadCount, curedCount }) => {\n//                     searchLocation(\n//                         {\n//                           province: cityEnglishName,\n//                           country,\n//                           deadCount,\n//                           curedCount\n//                         },\n//                         pos => {\n//                           pos.forEach(({ latitude, longitude }) => {\n//                             addMarkerToGroup(group, {\n//                               lat: latitude,\n//                               lng: longitude,\n//                               province: cityEnglishName,\n//                               country,\n//                               confirmedCount,\n//                               deadCount,\n//                               curedCount\n//                             });\n//                           });\n//                         }\n//                     );\n//                   }\n//               );\n//             }\n//           }\n//       );\n// }\n// function makeRemoveAllMarkers(group) {\n//   return () => {\n//     group.removeAll();\n//   };\n// }\n// export default function App() {\n//   const [results, setResults] = React.useState([]);\n//   React.useEffect(() => {\n//     getCachedResults().then(res => {\n//       setResults(res);\n//     });\n//     fetchResults().then(res => {\n//       setResults(res);\n//     });\n//   }, []);\n//   React.useEffect(() => {\n//     if (!results.length) return;\n//     removeAllMarkers();\n//     addMarkers(results);\n//   }, [results]);\n//   return <div className='App'></div>;\n// }","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Amplify","Home","Error","Books","Cart","Checkout","BookDetails","Admin","Dashboard","UltimateDashboard","Header","Communicate","awsExports","configure","App"],"mappings":"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":["import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// Amplify\nimport Amplify from \"aws-amplify\";\n\n// Pages\nimport Home from \"./pages/Home\"\nimport Error from \"./pages/Error\";\nimport Books from \"./pages/Books\";\nimport Cart from \"./pages/Cart\";\nimport Checkout from \"./pages/Checkout\";\nimport BookDetails from \"./pages/BookDetails\";\nimport Admin from './pages/Admin';\nimport Dashboard from './pages/Dashboard';\nimport UltimateDashboard from './UltimateDashboard';\n\n// Components\nimport Header from \"./components/Header\";\n\n// Comunicate BOT\nimport Communicate from \"./Communicate/Communicate\";\n\n\n// Amplify Configurations\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Communicate />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/dashboard\">\n          <UltimateDashboard />\n        </Route>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n        <Route path=\"/checkout\">\n          <Checkout />\n        </Route>\n        <Route exact path=\"/books\">\n          <Books />\n        </Route>\n        <Route\n          path=\"/books/:id\"\n          children={<BookDetails></BookDetails>}>\n        </Route>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n// import React from 'react';\n// // import {\n// //   getCachedResults,\n// //   fetchResults,\n// //   removeAllMarkers,\n// //   addMarkers\n// // } from './map';\n// const H = window.H;\n\n// const platform = new H.service.Platform({\n//   apikey: 'LEKWHSBws2AdMq7AOzft6cGDIfT9c3p8VIuQFvwLdp4'\n// });\n\n// const defaultLayers = platform.createDefaultLayers();\n\n// const map = new H.Map(\n//     document.getElementById('map'),\n//     defaultLayers.vector.normal.map,\n//     {\n//       center: { lat: 30.5684073, lng: 114.0201923 },\n//       zoom: 3,\n//       pixelRatio: window.devicePixelRatio || 1\n//     }\n// );\n\n// new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n// const ui = H.ui.UI.createDefault(map, defaultLayers);\n\n// const group = new H.map.Group();\n\n// map.addObject(group);\n\n// group.addEventListener('tap', onMarkerTapped, false);\n\n// function onMarkerTapped(evt) {\n//   if (activeBubble) {\n//     activeBubble.close();\n//   }\n\n//   const bubble = new H.ui.InfoBubble(evt.target.getGeometry(), {\n//     content: evt.target.getData()\n//   });\n\n//   ui.addBubble(bubble);\n\n//   activeBubble = bubble;\n// }\n\n// export const addMarkers = makeAddMarkers(group);\n// export const removeAllMarkers = makeRemoveAllMarkers(group);\n\n// let activeBubble;\n\n// window.addEventListener('resize', () => map.getViewPort().resize());\n\n// export function getCachedResults() {\n//   return new Promise(resolve => {\n//     const data = require('./data.json');\n\n//     resolve(serializeResults(data));\n//   });\n// }\n\n// export function fetchResults() {\n//   return fetch('https://lab.isaaclin.cn/nCoV/api/area?latest=1')\n//       .then(res => res.json())\n//       .then(serializeResults);\n// }\n\n// function serializeResults(res) {\n//   return res.results.map(\n//       ({\n//          countryEnglishName,\n//          provinceName,\n//          provinceEnglishName,\n//          confirmedCount,\n//          deadCount,\n//          curedCount,\n//          cities\n//        }) => ({\n//         province: provinceEnglishName || provinceName,\n//         country: countryEnglishName,\n//         cities,\n//         confirmedCount,\n//         deadCount,\n//         curedCount\n//       })\n//   );\n// }\n\n// function geoCode(geocodingParameters, onSuccess) {\n//   const geocoder = platform.getGeocodingService();\n\n//   return geocoder.geocode(geocodingParameters, onSuccess);\n// }\n\n// function searchLocation({ province, country }, onSuccess) {\n//   const provinceIsCountry = province === country;\n\n//   const geocodingParameters = provinceIsCountry\n//       ? { country }\n//       : { searchText: `${province}, ${country}` };\n\n//   geoCode({ ...geocodingParameters, jsonattributes: 1 }, res => {\n//     const pos = res.response.view.flatMap(v =>\n//         v.result.flatMap(r => r.location.displayPosition)\n//     );\n\n//     onSuccess(pos);\n//   });\n// }\n\n// function addMarkerToGroup(\n//     group,\n//     { lat, lng, province, country, confirmedCount, deadCount, curedCount }\n// ) {\n//   const iconEl = createMarker(confirmedCount);\n\n//   const domIcon = new H.map.DomIcon(iconEl);\n\n//   const marker = new H.map.DomMarker({ lat, lng }, { icon: domIcon });\n\n//   group.addObject(marker);\n\n//   marker.setData(`\n//     <div class='info'>\n//       <div class='info__header'>\n//         <strong class='info__province'>${province}</strong>\n//         ${province === country ? '' : `<div>${country}</div>`}\n//       </div>\n//       <div class='info__content'>\n//         <div class='col'>\n//           <div class='info__label'>Ca ghi nhận</div>\n//           <div><strong class='info__stat color-warn'>${formatNumber(\n//       confirmedCount\n//   )}</strong></div>\n//         </div>\n//         <div class='col'>\n//           <div class='info__label'>Tử vong</div>\n//           <div><strong class='info__stat color-died'>${formatNumber(\n//       deadCount\n//   )}</strong></div>\n//         </div>\n//         <div class='col'>\n//           <div class='info__label'>Hồi phục</div>\n//           <div><strong class='info__stat color-cured'>${formatNumber(\n//       curedCount\n//   )}</strong></div>\n//         </div>\n//       </div>\n//     </div>\n//   `);\n// }\n\n// function createMarker(radius) {\n//   const iconEl = document.createElement('div');\n\n//   iconEl.className = 'circle';\n//   iconEl.style.width = radius + 'px';\n//   iconEl.style.height = radius + 'px';\n//   iconEl.innerHTML = radius;\n\n//   return iconEl;\n// }\n\n// function formatNumber(x) {\n//   return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n// }\n\n// function makeAddMarkers(group) {\n//   return res =>\n//       res.forEach(\n//           ({\n//              province,\n//              country,\n//              confirmedCount,\n//              deadCount,\n//              curedCount,\n//              cities\n//            }) => {\n//             searchLocation({ province, country }, pos => {\n//               pos.forEach(({ latitude, longitude }) => {\n//                 addMarkerToGroup(group, {\n//                   lat: latitude,\n//                   lng: longitude,\n//                   confirmedCount,\n//                   province,\n//                   country,\n//                   deadCount,\n//                   curedCount\n//                 });\n//               });\n//             });\n\n//             if (cities && cities.length > 0) {\n//               cities.forEach(\n//                   ({ cityEnglishName, confirmedCount, deadCount, curedCount }) => {\n//                     searchLocation(\n//                         {\n//                           province: cityEnglishName,\n//                           country,\n//                           deadCount,\n//                           curedCount\n//                         },\n//                         pos => {\n//                           pos.forEach(({ latitude, longitude }) => {\n//                             addMarkerToGroup(group, {\n//                               lat: latitude,\n//                               lng: longitude,\n//                               province: cityEnglishName,\n//                               country,\n//                               confirmedCount,\n//                               deadCount,\n//                               curedCount\n//                             });\n//                           });\n//                         }\n//                     );\n//                   }\n//               );\n//             }\n//           }\n//       );\n// }\n\n// function makeRemoveAllMarkers(group) {\n//   return () => {\n//     group.removeAll();\n//   };\n// }\n\n// export default function App() {\n//   const [results, setResults] = React.useState([]);\n\n//   React.useEffect(() => {\n//     getCachedResults().then(res => {\n//       setResults(res);\n//     });\n\n//     fetchResults().then(res => {\n//       setResults(res);\n//     });\n//   }, []);\n\n//   React.useEffect(() => {\n//     if (!results.length) return;\n\n//     removeAllMarkers();\n//     addMarkers(results);\n//   }, [results]);\n\n//   return <div className='App'></div>;\n// }\n"]},"metadata":{},"sourceType":"module"}