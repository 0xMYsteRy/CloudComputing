{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/pages/UltimateDashboard.js\";\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport L from 'leaflet';\nimport { promiseToFlyTo, geoJsonToMarkers, clearMapLayers } from '../components/lib/map';\nimport { trackerLocationsToGeoJson, trackerFeatureToHtmlMarker } from '../components/lib/coronavirus';\nimport { commafy, friendlyDate } from '../components/lib/util';\nimport { useCoronavirusTracker } from 'hooks';\nimport Layout from '../components/Layout';\nimport Container from '../components/Container';\nimport Map from '../components/Map';\nconst LOCATION = {\n  lat: 0,\n  lng: 0\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 1;\n\nconst IndexPage = () => {\n  var _stats, _stats2, _stats3, _stats4, _stats5, _stats6, _stats7, _stats8, _stats9, _stats10;\n\n  //   const { data: countries = [] } = useCoronavirusTracker({\n  //     api: 'countries',\n  //   })\n  //   const { data: stats = {} } = useCoronavirusTracker({\n  //     api: 'all',\n  //   })\n  const hasCountries = Array.isArray(countries) && countries.length > 0;\n  /**\n   * mapEffect\n   * @description Fires a callback once the page renders\n   * @example Here this is and example of being used to zoom in and set a popup on load\n   */\n\n  async function mapEffect({\n    leafletElement: map\n  } = {}) {\n    if (!map || !hasCountries) return;\n    clearMapLayers({\n      map,\n      excludeByName: ['Mapbox']\n    });\n    const locationsGeoJson = trackerLocationsToGeoJson(countries);\n    const locationsGeoJsonLayers = geoJsonToMarkers(locationsGeoJson, {\n      onClick: handleOnMarkerClick,\n      featureToHtml: trackerFeatureToHtmlMarker\n    });\n    const bounds = locationsGeoJsonLayers.getBounds();\n    locationsGeoJsonLayers.addTo(map);\n    map.fitBounds(bounds);\n  }\n\n  function handleOnMarkerClick({\n    feature = {}\n  } = {}, event = {}) {\n    const {\n      target = {}\n    } = event;\n    const {\n      _map: map = {}\n    } = target;\n    const {\n      geometry = {},\n      properties = {}\n    } = feature;\n    const {\n      coordinates\n    } = geometry;\n    const {\n      countryBounds,\n      countryCode\n    } = properties;\n    promiseToFlyTo(map, {\n      center: {\n        lat: coordinates[1],\n        lng: coordinates[0]\n      },\n      zoom: 3\n    });\n\n    if (countryBounds && countryCode !== 'US') {\n      const boundsGeoJsonLayer = new L.GeoJSON(countryBounds);\n      const boundsGeoJsonLayerBounds = boundsGeoJsonLayer.getBounds();\n      map.fitBounds(boundsGeoJsonLayerBounds);\n    }\n  }\n\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: 'Mapbox',\n    zoom: DEFAULT_ZOOM,\n    mapEffect\n  };\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageName: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Home Page\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tracker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, Object.assign({}, mapSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tracker-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tracker-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats = stats) === null || _stats === void 0 ? void 0 : _stats.tests) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Total Tests\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats2 = stats) === null || _stats2 === void 0 ? void 0 : _stats2.testsPerOneMillion) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Per 1 Million\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tracker-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats3 = stats) === null || _stats3 === void 0 ? void 0 : _stats3.cases) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Total Cases\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats4 = stats) === null || _stats4 === void 0 ? void 0 : _stats4.casesPerOneMillion) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Per 1 Million\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tracker-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats5 = stats) === null || _stats5 === void 0 ? void 0 : _stats5.deaths) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Total Deaths\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats6 = stats) === null || _stats6 === void 0 ? void 0 : _stats6.deathsPerOneMillion) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Per 1 Million\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tracker-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats7 = stats) === null || _stats7 === void 0 ? void 0 : _stats7.active) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Active\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tracker-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats8 = stats) === null || _stats8 === void 0 ? void 0 : _stats8.critical) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Critical\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tracker-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tracker-stat-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, stats ? commafy((_stats9 = stats) === null || _stats9 === void 0 ? void 0 : _stats9.recovered) : '-', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Recovered\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tracker-last-updated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Last Updated: \", stats ? friendlyDate((_stats10 = stats) === null || _stats10 === void 0 ? void 0 : _stats10.updated) : '-'))), /*#__PURE__*/React.createElement(Container, {\n    type: \"content\",\n    className: \"text-center home-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Demo Mapping App with Gatsby and React Leaflet\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Uses\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/ExpDev07/coronavirus-tracker-api\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"github.com/ExpDev07/coronavirus-tracker-api\"), ' ', \"via \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://coronavirus-tracker-api.herokuapp.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"coronavirus-tracker-api.herokuapp.com\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Which uses jhu - \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/CSSEGISandData/COVID-19\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 30\n    }\n  }, \"github.com/CSSEGISandData/COVID-19\"), ' ', \"- Worldwide Data repository operated by the Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE).\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"And csbs -\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.csbs.org/information-covid-19-coronavirus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"csbs.org/information-covid-19-coronavirus\"), ' ', \"- U.S. County data that comes from the Conference of State Bank Supervisors.\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Want to build your own map?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Check out\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/colbyfayock/gatsby-starter-leaflet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"github.com/colbyfayock/gatsby-starter-leaflet\"))));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/pages/UltimateDashboard.js"],"names":["React","Helmet","L","promiseToFlyTo","geoJsonToMarkers","clearMapLayers","trackerLocationsToGeoJson","trackerFeatureToHtmlMarker","commafy","friendlyDate","useCoronavirusTracker","Layout","Container","Map","LOCATION","lat","lng","CENTER","DEFAULT_ZOOM","IndexPage","hasCountries","Array","isArray","countries","length","mapEffect","leafletElement","map","excludeByName","locationsGeoJson","locationsGeoJsonLayers","onClick","handleOnMarkerClick","featureToHtml","bounds","getBounds","addTo","fitBounds","feature","event","target","_map","geometry","properties","coordinates","countryBounds","countryCode","center","zoom","boundsGeoJsonLayer","GeoJSON","boundsGeoJsonLayerBounds","mapSettings","defaultBaseMap","stats","tests","testsPerOneMillion","cases","casesPerOneMillion","deaths","deathsPerOneMillion","active","critical","recovered","updated"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport L from 'leaflet';\n\nimport { promiseToFlyTo, geoJsonToMarkers, clearMapLayers } from '../components/lib/map';\nimport { trackerLocationsToGeoJson, trackerFeatureToHtmlMarker } from '../components/lib/coronavirus';\nimport { commafy, friendlyDate } from '../components/lib/util';\nimport { useCoronavirusTracker } from 'hooks';\n\nimport Layout from '../components/Layout';\nimport Container from '../components/Container';\nimport Map from '../components/Map';\n\nconst LOCATION = {\n  lat: 0,\n  lng: 0,\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 1;\n\nconst IndexPage = () => {\n//   const { data: countries = [] } = useCoronavirusTracker({\n//     api: 'countries',\n//   })\n\n//   const { data: stats = {} } = useCoronavirusTracker({\n//     api: 'all',\n//   })\n\n  const hasCountries = Array.isArray( countries ) && countries.length > 0;\n\n  /**\n   * mapEffect\n   * @description Fires a callback once the page renders\n   * @example Here this is and example of being used to zoom in and set a popup on load\n   */\n\n  async function mapEffect({ leafletElement: map } = {}) {\n    if ( !map || !hasCountries ) return;\n\n    clearMapLayers({\n      map,\n      excludeByName: ['Mapbox'],\n    });\n\n    const locationsGeoJson = trackerLocationsToGeoJson( countries );\n\n    const locationsGeoJsonLayers = geoJsonToMarkers( locationsGeoJson, {\n      onClick: handleOnMarkerClick,\n      featureToHtml: trackerFeatureToHtmlMarker,\n    });\n\n    const bounds = locationsGeoJsonLayers.getBounds();\n\n    locationsGeoJsonLayers.addTo( map );\n\n    map.fitBounds( bounds );\n  }\n\n  function handleOnMarkerClick({ feature = {} } = {}, event = {}) {\n    const { target = {} } = event;\n    const { _map: map = {} } = target;\n\n    const { geometry = {}, properties = {} } = feature;\n    const { coordinates } = geometry;\n    const { countryBounds, countryCode } = properties;\n\n    promiseToFlyTo( map, {\n      center: {\n        lat: coordinates[1],\n        lng: coordinates[0],\n      },\n      zoom: 3,\n    });\n\n    if ( countryBounds && countryCode !== 'US' ) {\n      const boundsGeoJsonLayer = new L.GeoJSON( countryBounds );\n      const boundsGeoJsonLayerBounds = boundsGeoJsonLayer.getBounds();\n\n      map.fitBounds( boundsGeoJsonLayerBounds );\n    }\n  }\n\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: 'Mapbox',\n    zoom: DEFAULT_ZOOM,\n    mapEffect,\n  };\n\n  return (\n    <Layout pageName=\"home\">\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n\n      <div className=\"tracker\">\n        <Map {...mapSettings} />\n\n        <div className=\"tracker-stats\">\n          <ul>\n            <li className=\"tracker-stat\">\n              <p className=\"tracker-stat-primary\">\n                { stats ? commafy( stats?.tests ) : '-' }\n                <strong>Total Tests</strong>\n              </p>\n              <p className=\"tracker-stat-secondary\">\n                { stats ? commafy( stats?.testsPerOneMillion ) : '-' }\n                <strong>Per 1 Million</strong>\n              </p>\n            </li>\n            <li className=\"tracker-stat\">\n              <p className=\"tracker-stat-primary\">\n                { stats ? commafy( stats?.cases ) : '-' }\n                <strong>Total Cases</strong>\n              </p>\n              <p className=\"tracker-stat-secondary\">\n                { stats ? commafy( stats?.casesPerOneMillion ) : '-' }\n                <strong>Per 1 Million</strong>\n              </p>\n            </li>\n            <li className=\"tracker-stat\">\n              <p className=\"tracker-stat-primary\">\n                { stats ? commafy( stats?.deaths ) : '-' }\n                <strong>Total Deaths</strong>\n              </p>\n              <p className=\"tracker-stat-secondary\">\n                { stats ? commafy( stats?.deathsPerOneMillion ) : '-' }\n                <strong>Per 1 Million</strong>\n              </p>\n            </li>\n            <li className=\"tracker-stat\">\n              <p className=\"tracker-stat-primary\">\n                { stats ? commafy( stats?.active ) : '-' }\n                <strong>Active</strong>\n              </p>\n            </li>\n            <li className=\"tracker-stat\">\n              <p className=\"tracker-stat-primary\">\n                { stats ? commafy( stats?.critical ) : '-' }\n                <strong>Critical</strong>\n              </p>\n            </li>\n            <li className=\"tracker-stat\">\n              <p className=\"tracker-stat-primary\">\n                { stats ? commafy( stats?.recovered ) : '-' }\n                <strong>Recovered</strong>\n              </p>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"tracker-last-updated\">\n          <p>Last Updated: { stats ? friendlyDate( stats?.updated ) : '-' }</p>\n        </div>\n      </div>\n\n      <Container type=\"content\" className=\"text-center home-start\">\n        <h2>Demo Mapping App with Gatsby and React Leaflet</h2>\n        <ul>\n          <li>\n            Uses{ ' ' }\n            <a href=\"https://github.com/ExpDev07/coronavirus-tracker-api\">\n              github.com/ExpDev07/coronavirus-tracker-api\n            </a>{ ' ' }\n            via <a href=\"https://coronavirus-tracker-api.herokuapp.com/\">coronavirus-tracker-api.herokuapp.com</a>\n          </li>\n          <li>\n            Which uses jhu - <a href=\"https://github.com/CSSEGISandData/COVID-19\">github.com/CSSEGISandData/COVID-19</a>{ ' ' }\n            - Worldwide Data repository operated by the Johns Hopkins University Center for Systems Science and\n            Engineering (JHU CSSE).\n          </li>\n          <li>\n            And csbs -{ ' ' }\n            <a href=\"https://www.csbs.org/information-covid-19-coronavirus\">\n              csbs.org/information-covid-19-coronavirus\n            </a>{ ' ' }\n            - U.S. County data that comes from the Conference of State Bank Supervisors.\n          </li>\n        </ul>\n\n        <h2>Want to build your own map?</h2>\n        <p>\n          Check out{ ' ' }\n          <a href=\"https://github.com/colbyfayock/gatsby-starter-leaflet\">\n            github.com/colbyfayock/gatsby-starter-leaflet\n          </a>\n        </p>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}