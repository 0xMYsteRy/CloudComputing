{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/components/DataTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'country_name',\n  label: 'Region'\n}, {\n  id: 'cases',\n  label: 'Cases'\n}, {\n  id: 'deaths',\n  label: 'Death',\n  align: 'right',\n  format: value => value.toLocaleString()\n}, {\n  id: 'total_recovered',\n  label: 'Recovered',\n  align: 'right',\n  format: value => value.toLocaleString()\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  container: {\n    maxHeight: '50vh'\n  },\n  table: {},\n  tableHead: {\n    padding: \"5px 12px 5px 12px\"\n  },\n  tableCell: {\n    padding: \"6px 12px 6px 12px\"\n  }\n});\n\nfunction DataTable({\n  data,\n  updateDataDetails\n}) {\n  const rows = data; // console.log(props.data);\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const rowClickHandler = (event, data) => {\n    console.log('row Clicked', data);\n    updateDataDetails(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    className: classes.tableHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: i,\n      onClick: event => rowClickHandler(event, row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        className: classes.tableCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 20, 40],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/components/DataTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","align","format","value","toLocaleString","useStyles","root","width","height","container","maxHeight","table","tableHead","padding","tableCell","DataTable","data","updateDataDetails","rows","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","rowClickHandler","console","log","map","column","minWidth","slice","row","i","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst columns = [\n  { id: 'country_name', label: 'Region' },\n  { id: 'cases', label: 'Cases', },\n  {\n    id: 'deaths',\n    label: 'Death',\n    align: 'right',\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: 'total_recovered',\n    label: 'Recovered',\n    align: 'right',\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  container: {\n    maxHeight: '50vh',\n  },\n  table: {\n  },\n  tableHead: {\n    padding: \"5px 12px 5px 12px\"\n  },\n  tableCell: {\n    padding: \"6px 12px 6px 12px\"\n  }\n});\n\nfunction DataTable({ data, updateDataDetails }) {\n  const rows = data;\n  // console.log(props.data);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const rowClickHandler = (event, data) => {\n    console.log('row Clicked', data);\n    updateDataDetails(data);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow  >\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  className={classes.tableHead}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={i}\n                  onClick={(event) => rowClickHandler(event, row)}\n                >\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align} className={classes.tableCell}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 40]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\nexport default DataTable\n"]},"metadata":{},"sourceType":"module"}