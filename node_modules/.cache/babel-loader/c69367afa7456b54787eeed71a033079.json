{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/components/Container.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({\n  children,\n  className,\n  type\n}) => {\n  let containerClassName = 'container';\n\n  if (typeof type === 'string') {\n    containerClassName = `${containerClassName} container-${type}`;\n  }\n\n  if (typeof className === 'string') {\n    containerClassName = `${containerClassName} ${className}`;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: containerClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  type: PropTypes.string\n};\nexport default Container;","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/components/Container.js"],"names":["React","PropTypes","Container","children","className","type","containerClassName","propTypes","node","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,KAAmC;AACnD,MAAIC,kBAAkB,GAAG,WAAzB;;AAEA,MAAK,OAAOD,IAAP,KAAgB,QAArB,EAAgC;AAC9BC,IAAAA,kBAAkB,GAAI,GAAEA,kBAAmB,cAAaD,IAAK,EAA7D;AACD;;AAED,MAAK,OAAOD,SAAP,KAAqB,QAA1B,EAAqC;AACnCE,IAAAA,kBAAkB,GAAI,GAAEA,kBAAmB,IAAGF,SAAU,EAAxD;AACD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAEE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCH,QAAtC,CAAP;AACD,CAZD;;AAcAD,SAAS,CAACK,SAAV,GAAsB;AACpBJ,EAAAA,QAAQ,EAAEF,SAAS,CAACO,IADA;AAEpBJ,EAAAA,SAAS,EAAEH,SAAS,CAACQ,MAFD;AAGpBJ,EAAAA,IAAI,EAAEJ,SAAS,CAACQ;AAHI,CAAtB;AAMA,eAAeP,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children, className, type }) => {\n  let containerClassName = 'container';\n\n  if ( typeof type === 'string' ) {\n    containerClassName = `${containerClassName} container-${type}`;\n  }\n\n  if ( typeof className === 'string' ) {\n    containerClassName = `${containerClassName} ${className}`;\n  }\n\n  return <div className={containerClassName}>{ children }</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}