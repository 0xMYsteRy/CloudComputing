{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/components/Map.js\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map as BaseMap, TileLayer, ZoomControl } from 'react-leaflet';\nimport { useConfigureLeaflet, useMapServices, useRefEffect } from 'hooks';\nimport { isDomAvailable } from '../components/lib/util';\nconst DEFAULT_MAP_SERVICE = 'OpenStreetMap';\n\nconst Map = props => {\n  const {\n    children,\n    className,\n    defaultBaseMap = DEFAULT_MAP_SERVICE,\n    mapEffect,\n    ...rest\n  } = props;\n  const mapRef = useRef();\n  useConfigureLeaflet();\n  useRefEffect({\n    ref: mapRef,\n    effect: mapEffect\n  });\n  const services = useMapServices({\n    names: [...new Set([defaultBaseMap, DEFAULT_MAP_SERVICE])]\n  });\n  const basemap = services.find(service => service.name === defaultBaseMap);\n  let mapClassName = `map`;\n\n  if (className) {\n    mapClassName = `${mapClassName} ${className}`;\n  }\n\n  if (!isDomAvailable()) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: mapClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"map-loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Loading map...\"));\n  }\n\n  const mapSettings = {\n    className: 'map-base',\n    zoomControl: false,\n    ...rest\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: mapClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BaseMap, Object.assign({\n    ref: mapRef\n  }, mapSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), children, basemap && /*#__PURE__*/React.createElement(TileLayer, Object.assign({}, basemap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(ZoomControl, {\n    position: \"bottomright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nMap.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultBaseMap: PropTypes.string,\n  mapEffect: PropTypes.func\n};\nexport default Map;","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/components/Map.js"],"names":["React","useRef","PropTypes","Map","BaseMap","TileLayer","ZoomControl","useConfigureLeaflet","useMapServices","useRefEffect","isDomAvailable","DEFAULT_MAP_SERVICE","props","children","className","defaultBaseMap","mapEffect","rest","mapRef","ref","effect","services","names","Set","basemap","find","service","name","mapClassName","mapSettings","zoomControl","propTypes","node","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAG,IAAIC,OAAhB,EAAyBC,SAAzB,EAAoCC,WAApC,QAAuD,eAAvD;AAEA,SAASC,mBAAT,EAA8BC,cAA9B,EAA8CC,YAA9C,QAAkE,OAAlE;AACA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,MAAMC,mBAAmB,GAAG,eAA5B;;AAEA,MAAMR,GAAG,GAAKS,KAAF,IAAa;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,cAAc,GAAGJ,mBAAxC;AAA6DK,IAAAA,SAA7D;AAAwE,OAAGC;AAA3E,MAAoFL,KAA1F;AAEA,QAAMM,MAAM,GAAGjB,MAAM,EAArB;AAEAM,EAAAA,mBAAmB;AAEnBE,EAAAA,YAAY,CAAC;AACXU,IAAAA,GAAG,EAAED,MADM;AAEXE,IAAAA,MAAM,EAAEJ;AAFG,GAAD,CAAZ;AAKA,QAAMK,QAAQ,GAAGb,cAAc,CAAC;AAC9Bc,IAAAA,KAAK,EAAE,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAACR,cAAD,EAAiBJ,mBAAjB,CAAR,CAAJ;AADuB,GAAD,CAA/B;AAGA,QAAMa,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAgBC,OAAF,IAAeA,OAAO,CAACC,IAAR,KAAiBZ,cAA9C,CAAhB;AAEA,MAAIa,YAAY,GAAI,KAApB;;AAEA,MAAKd,SAAL,EAAiB;AACfc,IAAAA,YAAY,GAAI,GAAEA,YAAa,IAAGd,SAAU,EAA5C;AACD;;AAED,MAAK,CAACJ,cAAc,EAApB,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,EAAEkB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;AAED,QAAMC,WAAW,GAAG;AAClBf,IAAAA,SAAS,EAAE,UADO;AAElBgB,IAAAA,WAAW,EAAE,KAFK;AAGlB,OAAGb;AAHe,GAApB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEW,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEV;AAAd,KAA0BW,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACIhB,QADJ,EAEIW,OAAO,iBAAI,oBAAC,SAAD,oBAAeA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFf,eAGE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CA9CD;;AAgDArB,GAAG,CAAC4B,SAAJ,GAAgB;AACdlB,EAAAA,QAAQ,EAAEX,SAAS,CAAC8B,IADN;AAEdlB,EAAAA,SAAS,EAAEZ,SAAS,CAAC+B,MAFP;AAGdlB,EAAAA,cAAc,EAAEb,SAAS,CAAC+B,MAHZ;AAIdjB,EAAAA,SAAS,EAAEd,SAAS,CAACgC;AAJP,CAAhB;AAOA,eAAe/B,GAAf","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map as BaseMap, TileLayer, ZoomControl } from 'react-leaflet';\n\nimport { useConfigureLeaflet, useMapServices, useRefEffect } from 'hooks';\nimport { isDomAvailable } from '../components/lib/util';\n\nconst DEFAULT_MAP_SERVICE = 'OpenStreetMap';\n\nconst Map = ( props ) => {\n  const { children, className, defaultBaseMap = DEFAULT_MAP_SERVICE, mapEffect, ...rest } = props;\n\n  const mapRef = useRef();\n\n  useConfigureLeaflet();\n\n  useRefEffect({\n    ref: mapRef,\n    effect: mapEffect,\n  });\n\n  const services = useMapServices({\n    names: [...new Set([defaultBaseMap, DEFAULT_MAP_SERVICE])],\n  });\n  const basemap = services.find(( service ) => service.name === defaultBaseMap );\n\n  let mapClassName = `map`;\n\n  if ( className ) {\n    mapClassName = `${mapClassName} ${className}`;\n  }\n\n  if ( !isDomAvailable()) {\n    return (\n      <div className={mapClassName}>\n        <p className=\"map-loading\">Loading map...</p>\n      </div>\n    );\n  }\n\n  const mapSettings = {\n    className: 'map-base',\n    zoomControl: false,\n    ...rest,\n  };\n\n  return (\n    <div className={mapClassName}>\n      <BaseMap ref={mapRef} {...mapSettings}>\n        { children }\n        { basemap && <TileLayer {...basemap} /> }\n        <ZoomControl position=\"bottomright\" />\n      </BaseMap>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultBaseMap: PropTypes.string,\n  mapEffect: PropTypes.func,\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}