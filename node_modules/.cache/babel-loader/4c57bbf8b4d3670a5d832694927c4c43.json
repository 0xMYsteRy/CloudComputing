{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/App.js\";\n// import React from 'react';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// // Amplify\n// import Amplify from \"aws-amplify\";\n// // Pages\n// import Home from \"./pages/Home\"\n// import Error from \"./pages/Error\";\n// import Books from \"./pages/Books\";\n// import Cart from \"./pages/Cart\";\n// import Checkout from \"./pages/Checkout\";\n// import BookDetails from \"./pages/BookDetails\";\n// import Admin from './pages/Admin';\n// import Dashboard from './pages/Dashboard';\n// import UltimateDashboard from './UltimateDashboard';\n// // Components\n// import Header from \"./components/Header\";\n// // Comunicate BOT\n// import Communicate from \"./Communicate/Communicate\";\n// // Amplify Configurations\n// import awsExports from \"./aws-exports\";\n// Amplify.configure(awsExports);\n// const App = () => {\n//   return (\n//     <Router>\n//       <Header />\n//       <Communicate />\n//       <Switch>\n//         <Route exact path=\"/\">\n//           <Home />\n//         </Route>\n//         <Route path=\"/dashboard\">\n//           <UltimateDashboard />\n//         </Route>\n//         <Route path=\"/cart\">\n//           <Cart />\n//         </Route>\n//         <Route path=\"/checkout\">\n//           <Checkout />\n//         </Route>\n//         <Route exact path=\"/books\">\n//           <Books />\n//         </Route>\n//         <Route\n//           path=\"/books/:id\"\n//           children={<BookDetails></BookDetails>}>\n//         </Route>\n//         <Route path=\"/admin\">\n//           <Admin />\n//         </Route>\n//         <Route path=\"*\">\n//           <Error />\n//         </Route>\n//       </Switch>\n//     </Router>\n//   );\n// }\n// export default App;\nimport React from 'react'; // import {\n//   getCachedResults,\n//   fetchResults,\n//   removeAllMarkers,\n//   addMarkers\n// } from './map';\n\nconst H = window.H;\nconst platform = new H.service.Platform({\n  apikey: 'LEKWHSBws2AdMq7AOzft6cGDIfT9c3p8VIuQFvwLdp4'\n});\nconst defaultLayers = platform.createDefaultLayers();\nconst map = new H.Map(document.getElementById('map'), defaultLayers.vector.normal.map, {\n  center: {\n    lat: 30.5684073,\n    lng: 114.0201923\n  },\n  zoom: 3,\n  pixelRatio: window.devicePixelRatio || 1\n});\nnew H.mapevents.Behavior(new H.mapevents.MapEvents(map));\nconst ui = H.ui.UI.createDefault(map, defaultLayers);\nconst group = new H.map.Group();\nmap.addObject(group);\ngroup.addEventListener('tap', onMarkerTapped, false);\n\nfunction onMarkerTapped(evt) {\n  if (activeBubble) {\n    activeBubble.close();\n  }\n\n  const bubble = new H.ui.InfoBubble(evt.target.getGeometry(), {\n    content: evt.target.getData()\n  });\n  ui.addBubble(bubble);\n  activeBubble = bubble;\n}\n\nexport const addMarkers = makeAddMarkers(group);\nexport const removeAllMarkers = makeRemoveAllMarkers(group);\nlet activeBubble;\nwindow.addEventListener('resize', () => map.getViewPort().resize());\nexport function getCachedResults() {\n  return new Promise(resolve => {\n    const data = require('./data.json');\n\n    resolve(serializeResults(data));\n  });\n}\nexport function fetchResults() {\n  return fetch('https://lab.isaaclin.cn/nCoV/api/area?latest=1').then(res => res.json()).then(serializeResults);\n}\n\nfunction serializeResults(res) {\n  return res.results.map(({\n    countryEnglishName,\n    provinceName,\n    provinceEnglishName,\n    confirmedCount,\n    deadCount,\n    curedCount,\n    cities\n  }) => ({\n    province: provinceEnglishName || provinceName,\n    country: countryEnglishName,\n    cities,\n    confirmedCount,\n    deadCount,\n    curedCount\n  }));\n}\n\nfunction geoCode(geocodingParameters, onSuccess) {\n  const geocoder = platform.getGeocodingService();\n  return geocoder.geocode(geocodingParameters, onSuccess);\n}\n\nfunction searchLocation({\n  province,\n  country\n}, onSuccess) {\n  const provinceIsCountry = province === country;\n  const geocodingParameters = provinceIsCountry ? {\n    country\n  } : {\n    searchText: `${province}, ${country}`\n  };\n  geoCode({ ...geocodingParameters,\n    jsonattributes: 1\n  }, res => {\n    const pos = res.response.view.flatMap(v => v.result.flatMap(r => r.location.displayPosition));\n    onSuccess(pos);\n  });\n}\n\nfunction addMarkerToGroup(group, {\n  lat,\n  lng,\n  province,\n  country,\n  confirmedCount,\n  deadCount,\n  curedCount\n}) {\n  const iconEl = createMarker(confirmedCount);\n  const domIcon = new H.map.DomIcon(iconEl);\n  const marker = new H.map.DomMarker({\n    lat,\n    lng\n  }, {\n    icon: domIcon\n  });\n  group.addObject(marker);\n  marker.setData(`\n    <div class='info'>\n      <div class='info__header'>\n        <strong class='info__province'>${province}</strong>\n        ${province === country ? '' : `<div>${country}</div>`}\n      </div>\n      <div class='info__content'>\n        <div class='col'>\n          <div class='info__label'>Ca ghi nhận</div>\n          <div><strong class='info__stat color-warn'>${formatNumber(confirmedCount)}</strong></div>\n        </div>\n        <div class='col'>\n          <div class='info__label'>Tử vong</div>\n          <div><strong class='info__stat color-died'>${formatNumber(deadCount)}</strong></div>\n        </div>\n        <div class='col'>\n          <div class='info__label'>Hồi phục</div>\n          <div><strong class='info__stat color-cured'>${formatNumber(curedCount)}</strong></div>\n        </div>\n      </div>\n    </div>\n  `);\n}\n\nfunction createMarker(radius) {\n  const iconEl = document.createElement('div');\n  iconEl.className = 'circle';\n  iconEl.style.width = radius + 'px';\n  iconEl.style.height = radius + 'px';\n  iconEl.innerHTML = radius;\n  return iconEl;\n}\n\nfunction formatNumber(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction makeAddMarkers(group) {\n  return res => res.forEach(({\n    province,\n    country,\n    confirmedCount,\n    deadCount,\n    curedCount,\n    cities\n  }) => {\n    searchLocation({\n      province,\n      country\n    }, pos => {\n      pos.forEach(({\n        latitude,\n        longitude\n      }) => {\n        addMarkerToGroup(group, {\n          lat: latitude,\n          lng: longitude,\n          confirmedCount,\n          province,\n          country,\n          deadCount,\n          curedCount\n        });\n      });\n    });\n\n    if (cities && cities.length > 0) {\n      cities.forEach(({\n        cityEnglishName,\n        confirmedCount,\n        deadCount,\n        curedCount\n      }) => {\n        searchLocation({\n          province: cityEnglishName,\n          country,\n          deadCount,\n          curedCount\n        }, pos => {\n          pos.forEach(({\n            latitude,\n            longitude\n          }) => {\n            addMarkerToGroup(group, {\n              lat: latitude,\n              lng: longitude,\n              province: cityEnglishName,\n              country,\n              confirmedCount,\n              deadCount,\n              curedCount\n            });\n          });\n        });\n      });\n    }\n  });\n}\n\nfunction makeRemoveAllMarkers(group) {\n  return () => {\n    group.removeAll();\n  };\n}\n\nexport default function App() {\n  const [results, setResults] = React.useState([]);\n  React.useEffect(() => {\n    getCachedResults().then(res => {\n      setResults(res);\n    });\n    fetchResults().then(res => {\n      setResults(res);\n    });\n  }, []);\n  React.useEffect(() => {\n    if (!results.length) return;\n    removeAllMarkers();\n    addMarkers(results);\n  }, [results]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/App.js"],"names":["React","H","window","platform","service","Platform","apikey","defaultLayers","createDefaultLayers","map","Map","document","getElementById","vector","normal","center","lat","lng","zoom","pixelRatio","devicePixelRatio","mapevents","Behavior","MapEvents","ui","UI","createDefault","group","Group","addObject","addEventListener","onMarkerTapped","evt","activeBubble","close","bubble","InfoBubble","target","getGeometry","content","getData","addBubble","addMarkers","makeAddMarkers","removeAllMarkers","makeRemoveAllMarkers","getViewPort","resize","getCachedResults","Promise","resolve","data","require","serializeResults","fetchResults","fetch","then","res","json","results","countryEnglishName","provinceName","provinceEnglishName","confirmedCount","deadCount","curedCount","cities","province","country","geoCode","geocodingParameters","onSuccess","geocoder","getGeocodingService","geocode","searchLocation","provinceIsCountry","searchText","jsonattributes","pos","response","view","flatMap","v","result","r","location","displayPosition","addMarkerToGroup","iconEl","createMarker","domIcon","DomIcon","marker","DomMarker","icon","setData","formatNumber","radius","createElement","className","style","width","height","innerHTML","x","toString","replace","forEach","latitude","longitude","length","cityEnglishName","removeAll","App","setResults","useState","useEffect"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// // Amplify\n// import Amplify from \"aws-amplify\";\n\n// // Pages\n// import Home from \"./pages/Home\"\n// import Error from \"./pages/Error\";\n// import Books from \"./pages/Books\";\n// import Cart from \"./pages/Cart\";\n// import Checkout from \"./pages/Checkout\";\n// import BookDetails from \"./pages/BookDetails\";\n// import Admin from './pages/Admin';\n// import Dashboard from './pages/Dashboard';\n// import UltimateDashboard from './UltimateDashboard';\n\n// // Components\n// import Header from \"./components/Header\";\n\n// // Comunicate BOT\n// import Communicate from \"./Communicate/Communicate\";\n\n\n// // Amplify Configurations\n// import awsExports from \"./aws-exports\";\n// Amplify.configure(awsExports);\n\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Header />\n//       <Communicate />\n//       <Switch>\n//         <Route exact path=\"/\">\n//           <Home />\n//         </Route>\n//         <Route path=\"/dashboard\">\n//           <UltimateDashboard />\n//         </Route>\n//         <Route path=\"/cart\">\n//           <Cart />\n//         </Route>\n//         <Route path=\"/checkout\">\n//           <Checkout />\n//         </Route>\n//         <Route exact path=\"/books\">\n//           <Books />\n//         </Route>\n//         <Route\n//           path=\"/books/:id\"\n//           children={<BookDetails></BookDetails>}>\n//         </Route>\n//         <Route path=\"/admin\">\n//           <Admin />\n//         </Route>\n//         <Route path=\"*\">\n//           <Error />\n//         </Route>\n//       </Switch>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport React from 'react';\n// import {\n//   getCachedResults,\n//   fetchResults,\n//   removeAllMarkers,\n//   addMarkers\n// } from './map';\nconst H = window.H;\n\nconst platform = new H.service.Platform({\n  apikey: 'LEKWHSBws2AdMq7AOzft6cGDIfT9c3p8VIuQFvwLdp4'\n});\n\nconst defaultLayers = platform.createDefaultLayers();\n\nconst map = new H.Map(\n    document.getElementById('map'),\n    defaultLayers.vector.normal.map,\n    {\n      center: { lat: 30.5684073, lng: 114.0201923 },\n      zoom: 3,\n      pixelRatio: window.devicePixelRatio || 1\n    }\n);\n\nnew H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\nconst ui = H.ui.UI.createDefault(map, defaultLayers);\n\nconst group = new H.map.Group();\n\nmap.addObject(group);\n\ngroup.addEventListener('tap', onMarkerTapped, false);\n\nfunction onMarkerTapped(evt) {\n  if (activeBubble) {\n    activeBubble.close();\n  }\n\n  const bubble = new H.ui.InfoBubble(evt.target.getGeometry(), {\n    content: evt.target.getData()\n  });\n\n  ui.addBubble(bubble);\n\n  activeBubble = bubble;\n}\n\nexport const addMarkers = makeAddMarkers(group);\nexport const removeAllMarkers = makeRemoveAllMarkers(group);\n\nlet activeBubble;\n\nwindow.addEventListener('resize', () => map.getViewPort().resize());\n\nexport function getCachedResults() {\n  return new Promise(resolve => {\n    const data = require('./data.json');\n\n    resolve(serializeResults(data));\n  });\n}\n\nexport function fetchResults() {\n  return fetch('https://lab.isaaclin.cn/nCoV/api/area?latest=1')\n      .then(res => res.json())\n      .then(serializeResults);\n}\n\nfunction serializeResults(res) {\n  return res.results.map(\n      ({\n         countryEnglishName,\n         provinceName,\n         provinceEnglishName,\n         confirmedCount,\n         deadCount,\n         curedCount,\n         cities\n       }) => ({\n        province: provinceEnglishName || provinceName,\n        country: countryEnglishName,\n        cities,\n        confirmedCount,\n        deadCount,\n        curedCount\n      })\n  );\n}\n\nfunction geoCode(geocodingParameters, onSuccess) {\n  const geocoder = platform.getGeocodingService();\n\n  return geocoder.geocode(geocodingParameters, onSuccess);\n}\n\nfunction searchLocation({ province, country }, onSuccess) {\n  const provinceIsCountry = province === country;\n\n  const geocodingParameters = provinceIsCountry\n      ? { country }\n      : { searchText: `${province}, ${country}` };\n\n  geoCode({ ...geocodingParameters, jsonattributes: 1 }, res => {\n    const pos = res.response.view.flatMap(v =>\n        v.result.flatMap(r => r.location.displayPosition)\n    );\n\n    onSuccess(pos);\n  });\n}\n\nfunction addMarkerToGroup(\n    group,\n    { lat, lng, province, country, confirmedCount, deadCount, curedCount }\n) {\n  const iconEl = createMarker(confirmedCount);\n\n  const domIcon = new H.map.DomIcon(iconEl);\n\n  const marker = new H.map.DomMarker({ lat, lng }, { icon: domIcon });\n\n  group.addObject(marker);\n\n  marker.setData(`\n    <div class='info'>\n      <div class='info__header'>\n        <strong class='info__province'>${province}</strong>\n        ${province === country ? '' : `<div>${country}</div>`}\n      </div>\n      <div class='info__content'>\n        <div class='col'>\n          <div class='info__label'>Ca ghi nhận</div>\n          <div><strong class='info__stat color-warn'>${formatNumber(\n      confirmedCount\n  )}</strong></div>\n        </div>\n        <div class='col'>\n          <div class='info__label'>Tử vong</div>\n          <div><strong class='info__stat color-died'>${formatNumber(\n      deadCount\n  )}</strong></div>\n        </div>\n        <div class='col'>\n          <div class='info__label'>Hồi phục</div>\n          <div><strong class='info__stat color-cured'>${formatNumber(\n      curedCount\n  )}</strong></div>\n        </div>\n      </div>\n    </div>\n  `);\n}\n\nfunction createMarker(radius) {\n  const iconEl = document.createElement('div');\n\n  iconEl.className = 'circle';\n  iconEl.style.width = radius + 'px';\n  iconEl.style.height = radius + 'px';\n  iconEl.innerHTML = radius;\n\n  return iconEl;\n}\n\nfunction formatNumber(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction makeAddMarkers(group) {\n  return res =>\n      res.forEach(\n          ({\n             province,\n             country,\n             confirmedCount,\n             deadCount,\n             curedCount,\n             cities\n           }) => {\n            searchLocation({ province, country }, pos => {\n              pos.forEach(({ latitude, longitude }) => {\n                addMarkerToGroup(group, {\n                  lat: latitude,\n                  lng: longitude,\n                  confirmedCount,\n                  province,\n                  country,\n                  deadCount,\n                  curedCount\n                });\n              });\n            });\n\n            if (cities && cities.length > 0) {\n              cities.forEach(\n                  ({ cityEnglishName, confirmedCount, deadCount, curedCount }) => {\n                    searchLocation(\n                        {\n                          province: cityEnglishName,\n                          country,\n                          deadCount,\n                          curedCount\n                        },\n                        pos => {\n                          pos.forEach(({ latitude, longitude }) => {\n                            addMarkerToGroup(group, {\n                              lat: latitude,\n                              lng: longitude,\n                              province: cityEnglishName,\n                              country,\n                              confirmedCount,\n                              deadCount,\n                              curedCount\n                            });\n                          });\n                        }\n                    );\n                  }\n              );\n            }\n          }\n      );\n}\n\nfunction makeRemoveAllMarkers(group) {\n  return () => {\n    group.removeAll();\n  };\n}\n\nexport default function App() {\n  const [results, setResults] = React.useState([]);\n\n  React.useEffect(() => {\n    getCachedResults().then(res => {\n      setResults(res);\n    });\n\n    fetchResults().then(res => {\n      setResults(res);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (!results.length) return;\n\n    removeAllMarkers();\n    addMarkers(results);\n  }, [results]);\n\n  return <div className='App'></div>;\n}\n"]},"metadata":{},"sourceType":"module"}