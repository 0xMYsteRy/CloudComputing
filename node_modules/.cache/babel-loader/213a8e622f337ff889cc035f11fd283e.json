{"ast":null,"code":"var _jsxFileName = \"/Users/mystery/Desktop/bookstore-v2/src/pages/Dashboard.js\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport CountriesLine from \"../components/Graphs/Line\";\nimport CountriesBar from \"../components/Graphs/Bar\";\nimport CountriesHBar from \"../components/Graphs/HBar\";\nimport Doughnut from \"../components/Graphs/Doughnut\";\nimport SaigonPie from \"../components/Graphs/SaigonPie\";\nimport HanoiPie from \"../components/Graphs/HanoiPie\"; // For cards\n\nimport { Grid, Card, CardActions, Typography, CardHeader } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hero from \"../components/Hero\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    width: \"73vw\"\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  bot: {\n    color: 'white',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n  },\n  data: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: \"none\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    borderRadius: \"15px\"\n  }\n}));\nexport default function CountriesSummary() {\n  const [vietNamSummary, setVietNamSummary] = useState([]);\n  const [cambodiaSummary, setLaosSummary] = useState([]);\n  const [thaiLandSummary, setThaiLandSummary] = useState([]);\n  const [malaysiaSummary, setMalaysiaSummary] = useState([]);\n  const [singaporeSummary, setSingaporeSummary] = useState([]);\n  useEffect(() => {\n    axios.get('https://api.covid19api.com/live/country/vietnam/status/confirmed').then(res => {\n      setVietNamSummary(res.data);\n    }).catch(err => console.error(err));\n    axios.get('https://api.covid19api.com/live/country/singapore/status/confirmed').then(res => {\n      setSingaporeSummary(res.data);\n    }).catch(err => console.error(err));\n    axios.get('https://api.covid19api.com/live/country/thailand/status/confirmed').then(res => {\n      setThaiLandSummary(res.data);\n    }).catch(err => console.error(err));\n    axios.get('https://api.covid19api.com/live/country/cambodia/status/confirmed').then(res => {\n      setLaosSummary(res.data);\n    }).catch(err => console.error(err));\n    axios.get('https://api.covid19api.com/live/country/malaysia/status/confirmed').then(res => {\n      setMalaysiaSummary(res.data);\n    }).catch(err => console.error(err));\n  }, []);\n  var countriesSummary = [...singaporeSummary, ...cambodiaSummary, ...malaysiaSummary, ...vietNamSummary, ...thaiLandSummary]; // console.log(singaporeSummary);\n  // console.log(malaysiaSummary);\n  // console.log(vietNamSummary);\n  // console.log(LaosSummary);\n  // console.log(thaiLandSummary);\n\n  const columns = [{\n    field: 'id',\n    headerName: 'tableId',\n    width: 300\n  }, {\n    field: 'ID',\n    headerName: 'id',\n    width: 300\n  }, {\n    field: 'Country',\n    headerName: 'Country',\n    width: 150,\n    editable: true\n  }, {\n    field: 'Confirmed',\n    headerName: 'Confirmed cases',\n    width: 220,\n    type: 'number'\n  }, {\n    field: 'Deaths',\n    headerName: 'Deaths',\n    type: 'number',\n    width: 160\n  }, {\n    field: 'Recovered',\n    headerName: 'Recovered cases',\n    width: 220,\n    editable: true,\n    type: 'number'\n  }, {\n    field: 'Active',\n    headerName: 'Active cases',\n    width: 160,\n    type: 'number'\n  }, {\n    field: 'Date',\n    headerName: 'Date',\n    width: 220,\n    type: 'number'\n  }];\n  var vietNamCollection = [];\n  var singaporeCollection = [];\n  var cambodiaCollection = [];\n  var malaysiaCollection = [];\n  var thailandCollection = [];\n  var vietNamToday = [];\n  var rows = [];\n  var count = 1;\n\n  for (const country of countriesSummary) {\n    country['indexNumber'] = count;\n    count++;\n    country['id'] = country['indexNumber'];\n    rows.push(country);\n  }\n\n  var currentDate = new Date();\n  var sevenDayAgo = new Date();\n  currentDate.setDate(currentDate.getDate());\n  sevenDayAgo.setDate(sevenDayAgo.getDate() - 7);\n  var temp = [];\n\n  for (const country of countriesSummary) {\n    temp.push(country.Date);\n  }\n\n  temp.sort();\n  var recentDay = temp[temp.length - 1];\n  recentDay = new Date(recentDay);\n\n  for (const country of countriesSummary) {\n    var dayInArray = new Date(country['Date']);\n\n    if (dayInArray.getTime() >= sevenDayAgo.getTime() && dayInArray.getTime() <= recentDay.getTime()) {\n      if (country['Country'] === 'Viet Nam') {\n        vietNamCollection.push(country);\n\n        if (dayInArray.toLocaleDateString() === recentDay.toLocaleDateString()) {\n          vietNamToday.push(country);\n        }\n      }\n\n      if (country['Country'] === 'Singapore') {\n        singaporeCollection.push(country);\n      }\n\n      if (country['Country'] === 'Cambodia') {\n        cambodiaCollection.push(country);\n      }\n\n      if (country['Country'] === 'Malaysia') {\n        malaysiaCollection.push(country);\n      }\n\n      if (country['Country'] === 'Thailand') {\n        thailandCollection.push(country);\n      }\n    }\n  }\n\n  function getCountryConfirmedCases(countryCollection) {\n    var dataset = [];\n\n    for (const data of countryCollection) {\n      dataset.push(data.Confirmed);\n    }\n\n    return dataset.sort();\n  }\n\n  function getMonth(countryCollection) {\n    var dataset = [];\n\n    for (const data of countryCollection) {\n      dataset.push(new Date(data.Date).toLocaleDateString('fr-CA', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      }));\n    }\n\n    return dataset.sort();\n  }\n\n  function getCountryConfirmedDeath(countryCollection) {\n    var dataset = [];\n\n    for (const data of countryCollection) {\n      dataset.push(data.Deaths);\n    }\n\n    return dataset;\n  }\n\n  function getonlyCountry(countryCollection) {\n    var dataset = [];\n\n    for (const data of countryCollection) {\n      dataset.push(data.Country);\n    }\n\n    return dataset;\n  }\n\n  var label = [];\n\n  for (const vn of vietNamCollection) {\n    label.push(new Date(vn.Date).toLocaleDateString());\n  }\n\n  label.sort();\n\n  function getPieChartData(countryToday) {\n    var dataSetPieChart = [];\n\n    for (const data of countryToday) {\n      dataSetPieChart.push(data.Recovered);\n      dataSetPieChart.push(data.Deaths);\n      dataSetPieChart.push(data.Confirmed);\n      dataSetPieChart.push(data.Active);\n    }\n\n    return dataSetPieChart;\n  }\n\n  const [spacing, setSpacing] = React.useState(6);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hero, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    style: {\n      paddingTop: \"20px\"\n    },\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: spacing,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.paper,\n    style: {\n      border: \"none\",\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      borderRadius: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.bot,\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 46\n      }\n    }, \"Vaccinated People In South East Countries\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SaigonPie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.bot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.paper,\n    style: {\n      border: \"none\",\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      borderRadius: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.bot,\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 44\n      }\n    }, \"Total Death Cases From End Of June To Now\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CountriesLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.bot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.paper,\n    style: {\n      border: \"none\",\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      borderRadius: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.bot,\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 46\n      }\n    }, \"Total Confirmed Cases For The Last 7 Days\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CountriesBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.bot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/mystery/Desktop/bookstore-v2/src/pages/Dashboard.js"],"names":["axios","useState","useEffect","React","CountriesLine","CountriesBar","CountriesHBar","Doughnut","SaigonPie","HanoiPie","Grid","Card","CardActions","Typography","CardHeader","makeStyles","Hero","useStyles","theme","root","flexGrow","paper","width","control","padding","spacing","bot","color","background","border","borderRadius","boxShadow","data","CountriesSummary","vietNamSummary","setVietNamSummary","cambodiaSummary","setLaosSummary","thaiLandSummary","setThaiLandSummary","malaysiaSummary","setMalaysiaSummary","singaporeSummary","setSingaporeSummary","get","then","res","catch","err","console","error","countriesSummary","columns","field","headerName","editable","type","vietNamCollection","singaporeCollection","cambodiaCollection","malaysiaCollection","thailandCollection","vietNamToday","rows","count","country","push","currentDate","Date","sevenDayAgo","setDate","getDate","temp","sort","recentDay","length","dayInArray","getTime","toLocaleDateString","getCountryConfirmedCases","countryCollection","dataset","Confirmed","getMonth","year","month","day","getCountryConfirmedDeath","Deaths","getonlyCountry","Country","label","vn","getPieChartData","countryToday","dataSetPieChart","Recovered","Active","setSpacing","classes","paddingTop","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { useState, useEffect } from \"react\"\nimport React from \"react\"\n\nimport CountriesLine from \"../components/Graphs/Line\"\nimport CountriesBar from \"../components/Graphs/Bar\"\nimport CountriesHBar from \"../components/Graphs/HBar\"\nimport Doughnut from \"../components/Graphs/Doughnut\"\nimport SaigonPie from \"../components/Graphs/SaigonPie\";\nimport HanoiPie from \"../components/Graphs/HanoiPie\";\n\n\n// For cards\nimport { Grid, Card, CardActions, Typography, CardHeader } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Hero from \"../components/Hero\";\n\nconst useStyles = makeStyles((theme) => ({\n  root:\n  {\n    flexGrow: 1,\n  },\n  paper:\n  {\n    width: \"73vw\",\n  },\n  control:\n  {\n    padding: theme.spacing(2),\n  },\n  bot:\n  {\n    color: 'white',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  data:\n  {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: \"none\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    borderRadius: \"15px\",\n  }\n}));\n\nexport default function CountriesSummary() {\n  const [vietNamSummary, setVietNamSummary] = useState([]);\n  const [cambodiaSummary, setLaosSummary] = useState([]);\n  const [thaiLandSummary, setThaiLandSummary] = useState([]);\n  const [malaysiaSummary, setMalaysiaSummary] = useState([]);\n  const [singaporeSummary, setSingaporeSummary] = useState([]);\n  useEffect(() => {\n    axios\n      .get('https://api.covid19api.com/live/country/vietnam/status/confirmed')\n\n      .then((res) => {\n        setVietNamSummary(res.data);\n\n      })\n      .catch((err) => console.error(err))\n\n    axios\n      .get('https://api.covid19api.com/live/country/singapore/status/confirmed')\n\n      .then((res) => {\n        setSingaporeSummary(res.data);\n\n      })\n      .catch((err) => console.error(err))\n\n    axios\n      .get('https://api.covid19api.com/live/country/thailand/status/confirmed')\n\n      .then((res) => {\n        setThaiLandSummary(res.data);\n\n      })\n      .catch((err) => console.error(err))\n\n    axios\n      .get('https://api.covid19api.com/live/country/cambodia/status/confirmed')\n\n      .then((res) => {\n        setLaosSummary(res.data);\n\n      })\n      .catch((err) => console.error(err))\n\n    axios\n      .get('https://api.covid19api.com/live/country/malaysia/status/confirmed')\n\n      .then((res) => {\n        setMalaysiaSummary(res.data);\n\n      })\n      .catch((err) => console.error(err))\n  }, []);\n\n  var countriesSummary = [...singaporeSummary, ...cambodiaSummary, ...malaysiaSummary, ...vietNamSummary, ...thaiLandSummary];\n\n  // console.log(singaporeSummary);\n  // console.log(malaysiaSummary);\n  // console.log(vietNamSummary);\n  // console.log(LaosSummary);\n  // console.log(thaiLandSummary);\n\n\n  const columns = [\n\n    { field: 'id', headerName: 'tableId', width: 300 },\n    { field: 'ID', headerName: 'id', width: 300 },\n    {\n      field: 'Country',\n      headerName: 'Country',\n      width: 150,\n      editable: true,\n    },\n    {\n      field: 'Confirmed',\n      headerName: 'Confirmed cases',\n      width: 220,\n      type: 'number',\n    },\n    {\n      field: 'Deaths',\n      headerName: 'Deaths',\n      type: 'number',\n      width: 160,\n    },\n    {\n      field: 'Recovered',\n      headerName: 'Recovered cases',\n      width: 220,\n      editable: true,\n      type: 'number',\n    },\n    {\n      field: 'Active',\n      headerName: 'Active cases',\n      width: 160,\n      type: 'number',\n    },\n    {\n      field: 'Date',\n      headerName: 'Date',\n      width: 220,\n      type: 'number',\n    },\n  ];\n\n  var vietNamCollection = [];\n  var singaporeCollection = [];\n  var cambodiaCollection = [];\n  var malaysiaCollection = [];\n  var thailandCollection = [];\n  var vietNamToday = [];\n\n  var rows = [];\n  var count = 1;\n  for (const country of countriesSummary) {\n\n    country['indexNumber'] = count;\n    count++;\n    country['id'] = country['indexNumber'];\n    rows.push(country);\n  }\n\n\n  var currentDate = new Date();\n  var sevenDayAgo = new Date();\n  currentDate.setDate(currentDate.getDate());\n  sevenDayAgo.setDate(sevenDayAgo.getDate() - 7);\n\n\n\n  var temp = [];\n  for (const country of countriesSummary) {\n    temp.push(country.Date);\n  }\n  temp.sort();\n  var recentDay = temp[temp.length - 1];\n  recentDay = new Date(recentDay);\n  \n  for (const country of countriesSummary) {\n    var dayInArray = new Date(country['Date']);\n    if (dayInArray.getTime() >= sevenDayAgo.getTime() && dayInArray.getTime() <= recentDay.getTime()) {\n      if (country['Country'] === 'Viet Nam') {\n        vietNamCollection.push(country);\n        if (dayInArray.toLocaleDateString() === recentDay.toLocaleDateString()) {\n          vietNamToday.push(country);\n        }\n      }\n      if (country['Country'] === 'Singapore') {\n        singaporeCollection.push(country);\n\n      }\n      if (country['Country'] === 'Cambodia') {\n        cambodiaCollection.push(country);\n      }\n      if (country['Country'] === 'Malaysia') {\n        malaysiaCollection.push(country);\n\n      }\n      if (country['Country'] === 'Thailand') {\n        thailandCollection.push(country);\n      }\n    }\n  }\n\n  function getCountryConfirmedCases(countryCollection) {\n    var dataset = [];\n    for (const data of countryCollection) {\n      dataset.push(data.Confirmed);\n    }\n    return dataset.sort();\n  }\n\n  function getMonth(countryCollection) {\n    var dataset = [];\n    for (const data of countryCollection) {\n      dataset.push((new Date(data.Date).toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit' })))\n    }\n    return dataset.sort();\n  }\n\n  function getCountryConfirmedDeath(countryCollection) {\n    var dataset = [];\n    for (const data of countryCollection) {\n      dataset.push(data.Deaths)\n    }\n    return dataset;\n  }\n\n  function getonlyCountry(countryCollection) {\n    var dataset = [];\n    for (const data of countryCollection) {\n      dataset.push(data.Country)\n    }\n    return dataset;\n  }\n\n  var label = [];\n  for (const vn of vietNamCollection) {\n    label.push((new Date(vn.Date).toLocaleDateString()));\n  }\n  label.sort();\n\n  function getPieChartData(countryToday) {\n    var dataSetPieChart = [];\n    for (const data of countryToday) {\n      dataSetPieChart.push(data.Recovered);\n      dataSetPieChart.push(data.Deaths);\n      dataSetPieChart.push(data.Confirmed);\n      dataSetPieChart.push(data.Active);\n    }\n    return dataSetPieChart;\n  }\n\n  const [spacing, setSpacing] = React.useState(6);\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Hero />\n    \n    <Grid container spacing={6} style={{ paddingTop: \"20px\"}} className={classes.root}>\n      <Grid item xs={12} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Grid\n          container\n          spacing={spacing}\n          justifyContent=\"center\"\n        >\n          <Grid item>\n            <Card\n                className={classes.paper}\n                style={{ border: \"none\", boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\", borderRadius: \"15px\", }}\n              >\n                <CardHeader\n                  className={classes.bot}\n                  title=\n                  {\n                    <Typography variant=\"h5\"><b>Vaccinated People In South East Countries</b></Typography>\n                  }\n                />\n                <SaigonPie />\n                <CardActions className={classes.bot} />\n              </Card>\n            </Grid>\n\n            {/* Line chart */}\n            <Grid item>\n            <Card\n              className={classes.paper}\n              style={{ border: \"none\", boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\", borderRadius: \"15px\", }}\n            >\n              <CardHeader\n                className={classes.bot}\n                title=\n                {\n                  <Typography variant=\"h5\"><b>Total Death Cases From End Of June To Now</b></Typography>\n                }\n              />\n              <CountriesLine />\n              <CardActions className={classes.bot} />\n            </Card>\n            </Grid>\n\n            {/* Bar chart */}\n            <Grid item>\n              <Card\n                className={classes.paper}\n                style={{ border: \"none\", boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\", borderRadius: \"15px\", }}\n              >\n                <CardHeader\n                  className={classes.bot}\n                  title=\n                  {\n                    <Typography variant=\"h5\"><b>Total Confirmed Cases For The Last 7 Days</b></Typography>\n                  }\n                />\n                <CountriesBar />\n                <CardActions className={classes.bot} />\n              </Card>\n            </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n    </div>\n  )\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}